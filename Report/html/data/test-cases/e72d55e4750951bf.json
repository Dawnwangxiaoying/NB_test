{
  "uid" : "e72d55e4750951bf",
  "name" : "TestOrder.test_order_01",
  "fullName" : "TestCase.test_order.TestOrder.test_order_01",
  "historyId" : "40ce12426cece3fedcf472baa5a42fa1",
  "time" : {
    "start" : 1593330297488,
    "stop" : 1593330299135,
    "duration" : 1647
  },
  "description" : "\n        用例描述：购买单个产品-匹配单个计费项下多个策略-支付订单\n        ",
  "descriptionHtml" : "<pre><code>    用例描述：购买单个产品-匹配单个计费项下多个策略-支付订单\n</code></pre>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert False\n +  where False = <bound method Assertions.assert_in_text of <Common.Assert.Assertions object at 0x10ada26d8>>({'body': {'code': 13, 'details': [{'@type': 'type.googleapis.com/newbilling.ErrorDetail', 'cause': '调用GetCosts接口失败', '...ewbilling.ErrorDetail\",\"error_name\":\"create_order_failed\",\"cause\":\"调用GetCosts接口失败\"}]}', 'time_consuming': 579.757, ...}, 'order_id')\n +    where <bound method Assertions.assert_in_text of <Common.Assert.Assertions object at 0x10ada26d8>> = <Common.Assert.Assertions object at 0x10ada26d8>.assert_in_text",
  "statusTrace" : "self = <TestCase.test_order.TestOrder object at 0x10ada2908>\n\n    @pytest.allure.feature('购买产品支付订单场景1')\n    @allure.severity('blocker')\n    def test_order_01(self):\n        \"\"\"\n            用例描述：购买单个产品-匹配单个计费项下多个策略-支付订单\n            \"\"\"\n        data = Order()\n        urls = data.url\n        params = data.data\n        header = data.header\n        request = Request.Request()\n        Asserts = Assert.Assertions()\n        conf = Config()\n        host = conf.host\n        req_url = 'http://' + host\n        api_url = req_url + urls[0]\n        sqlinfo = Mysql.Mysqlconnect()\n    \n        #创建订单\n    \n        response = request.post_request(api_url, params[0], header[0])\n>       assert Asserts.assert_in_text(response, 'order_id')\nE       assert False\nE        +  where False = <bound method Assertions.assert_in_text of <Common.Assert.Assertions object at 0x10ada26d8>>({'body': {'code': 13, 'details': [{'@type': 'type.googleapis.com/newbilling.ErrorDetail', 'cause': '调用GetCosts接口失败', '...ewbilling.ErrorDetail\",\"error_name\":\"create_order_failed\",\"cause\":\"调用GetCosts接口失败\"}]}', 'time_consuming': 579.757, ...}, 'order_id')\nE        +    where <bound method Assertions.assert_in_text of <Common.Assert.Assertions object at 0x10ada26d8>> = <Common.Assert.Assertions object at 0x10ada26d8>.assert_in_text\n\nTestCase/test_order.py:35: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "购买产品支付订单场景1"
  }, {
    "name" : "host",
    "value" : "wangxiaingdembp"
  }, {
    "name" : "severity",
    "value" : "blocker"
  }, {
    "name" : "thread",
    "value" : "29409-MainThread"
  }, {
    "name" : "suite",
    "value" : "TestCase.test_order"
  }, {
    "name" : "testClass",
    "value" : "TestCase.test_order"
  }, {
    "name" : "testMethod",
    "value" : "TestOrder.test_order_01"
  }, {
    "name" : "package",
    "value" : "TestCase.test_order"
  }, {
    "name" : "resultFormat",
    "value" : "allure1"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "blocker",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "e72d55e4750951bf.json",
  "parameterValues" : [ ]
}